//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace SLTest.Orders {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schema1")]
    public partial class Product : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private SLTest.Orders.DataObject ObjectField;
        
        private string ProductIDField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SLTest.Orders.DataObject Object {
            get {
                return this.ObjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectField, value) != true)) {
                    this.ObjectField = value;
                    this.RaisePropertyChanged("Object");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataObject", Namespace="http://schema2")]
    public partial class DataObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ObjectNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjectName {
            get {
                return this.ObjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjectNameField, value) != true)) {
                    this.ObjectNameField = value;
                    this.RaisePropertyChanged("ObjectName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Orders.IOrderService")]
    public interface IOrderService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrderService/ListProducts", ReplyAction="http://tempuri.org/IOrderService/ListProductsResponse")]
        System.IAsyncResult BeginListProducts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<SLTest.Orders.Product> EndListProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrderService/VerifyProducts", ReplyAction="http://tempuri.org/IOrderService/VerifyProductsResponse")]
        System.IAsyncResult BeginVerifyProducts(System.Collections.ObjectModel.ObservableCollection<long> ids, System.AsyncCallback callback, object asyncState);
        
        string EndVerifyProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrderService/GetNew", ReplyAction="http://tempuri.org/IOrderService/GetNewResponse")]
        System.IAsyncResult BeginGetNew(SLTest.Orders.Product p, System.AsyncCallback callback, object asyncState);
        
        SLTest.Orders.DataObject EndGetNew(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderServiceChannel : SLTest.Orders.IOrderService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<SLTest.Orders.Product> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<SLTest.Orders.Product>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VerifyProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public VerifyProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public SLTest.Orders.DataObject Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((SLTest.Orders.DataObject)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderServiceClient : System.ServiceModel.ClientBase<SLTest.Orders.IOrderService>, SLTest.Orders.IOrderService {
        
        private BeginOperationDelegate onBeginListProductsDelegate;
        
        private EndOperationDelegate onEndListProductsDelegate;
        
        private System.Threading.SendOrPostCallback onListProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginVerifyProductsDelegate;
        
        private EndOperationDelegate onEndVerifyProductsDelegate;
        
        private System.Threading.SendOrPostCallback onVerifyProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNewDelegate;
        
        private EndOperationDelegate onEndGetNewDelegate;
        
        private System.Threading.SendOrPostCallback onGetNewCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public OrderServiceClient() {
        }
        
        public OrderServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ListProductsCompletedEventArgs> ListProductsCompleted;
        
        public event System.EventHandler<VerifyProductsCompletedEventArgs> VerifyProductsCompleted;
        
        public event System.EventHandler<GetNewCompletedEventArgs> GetNewCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLTest.Orders.IOrderService.BeginListProducts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListProducts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<SLTest.Orders.Product> SLTest.Orders.IOrderService.EndListProducts(System.IAsyncResult result) {
            return base.Channel.EndListProducts(result);
        }
        
        private System.IAsyncResult OnBeginListProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((SLTest.Orders.IOrderService)(this)).BeginListProducts(callback, asyncState);
        }
        
        private object[] OnEndListProducts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<SLTest.Orders.Product> retVal = ((SLTest.Orders.IOrderService)(this)).EndListProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListProductsCompleted(object state) {
            if ((this.ListProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListProductsCompleted(this, new ListProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListProductsAsync() {
            this.ListProductsAsync(null);
        }
        
        public void ListProductsAsync(object userState) {
            if ((this.onBeginListProductsDelegate == null)) {
                this.onBeginListProductsDelegate = new BeginOperationDelegate(this.OnBeginListProducts);
            }
            if ((this.onEndListProductsDelegate == null)) {
                this.onEndListProductsDelegate = new EndOperationDelegate(this.OnEndListProducts);
            }
            if ((this.onListProductsCompletedDelegate == null)) {
                this.onListProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListProductsCompleted);
            }
            base.InvokeAsync(this.onBeginListProductsDelegate, null, this.onEndListProductsDelegate, this.onListProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLTest.Orders.IOrderService.BeginVerifyProducts(System.Collections.ObjectModel.ObservableCollection<long> ids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginVerifyProducts(ids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string SLTest.Orders.IOrderService.EndVerifyProducts(System.IAsyncResult result) {
            return base.Channel.EndVerifyProducts(result);
        }
        
        private System.IAsyncResult OnBeginVerifyProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<long> ids = ((System.Collections.ObjectModel.ObservableCollection<long>)(inValues[0]));
            return ((SLTest.Orders.IOrderService)(this)).BeginVerifyProducts(ids, callback, asyncState);
        }
        
        private object[] OnEndVerifyProducts(System.IAsyncResult result) {
            string retVal = ((SLTest.Orders.IOrderService)(this)).EndVerifyProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnVerifyProductsCompleted(object state) {
            if ((this.VerifyProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.VerifyProductsCompleted(this, new VerifyProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void VerifyProductsAsync(System.Collections.ObjectModel.ObservableCollection<long> ids) {
            this.VerifyProductsAsync(ids, null);
        }
        
        public void VerifyProductsAsync(System.Collections.ObjectModel.ObservableCollection<long> ids, object userState) {
            if ((this.onBeginVerifyProductsDelegate == null)) {
                this.onBeginVerifyProductsDelegate = new BeginOperationDelegate(this.OnBeginVerifyProducts);
            }
            if ((this.onEndVerifyProductsDelegate == null)) {
                this.onEndVerifyProductsDelegate = new EndOperationDelegate(this.OnEndVerifyProducts);
            }
            if ((this.onVerifyProductsCompletedDelegate == null)) {
                this.onVerifyProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnVerifyProductsCompleted);
            }
            base.InvokeAsync(this.onBeginVerifyProductsDelegate, new object[] {
                        ids}, this.onEndVerifyProductsDelegate, this.onVerifyProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult SLTest.Orders.IOrderService.BeginGetNew(SLTest.Orders.Product p, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNew(p, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SLTest.Orders.DataObject SLTest.Orders.IOrderService.EndGetNew(System.IAsyncResult result) {
            return base.Channel.EndGetNew(result);
        }
        
        private System.IAsyncResult OnBeginGetNew(object[] inValues, System.AsyncCallback callback, object asyncState) {
            SLTest.Orders.Product p = ((SLTest.Orders.Product)(inValues[0]));
            return ((SLTest.Orders.IOrderService)(this)).BeginGetNew(p, callback, asyncState);
        }
        
        private object[] OnEndGetNew(System.IAsyncResult result) {
            SLTest.Orders.DataObject retVal = ((SLTest.Orders.IOrderService)(this)).EndGetNew(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNewCompleted(object state) {
            if ((this.GetNewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNewCompleted(this, new GetNewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNewAsync(SLTest.Orders.Product p) {
            this.GetNewAsync(p, null);
        }
        
        public void GetNewAsync(SLTest.Orders.Product p, object userState) {
            if ((this.onBeginGetNewDelegate == null)) {
                this.onBeginGetNewDelegate = new BeginOperationDelegate(this.OnBeginGetNew);
            }
            if ((this.onEndGetNewDelegate == null)) {
                this.onEndGetNewDelegate = new EndOperationDelegate(this.OnEndGetNew);
            }
            if ((this.onGetNewCompletedDelegate == null)) {
                this.onGetNewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNewCompleted);
            }
            base.InvokeAsync(this.onBeginGetNewDelegate, new object[] {
                        p}, this.onEndGetNewDelegate, this.onGetNewCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override SLTest.Orders.IOrderService CreateChannel() {
            return new OrderServiceClientChannel(this);
        }
        
        private class OrderServiceClientChannel : ChannelBase<SLTest.Orders.IOrderService>, SLTest.Orders.IOrderService {
            
            public OrderServiceClientChannel(System.ServiceModel.ClientBase<SLTest.Orders.IOrderService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginListProducts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("ListProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<SLTest.Orders.Product> EndListProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<SLTest.Orders.Product> _result = ((System.Collections.ObjectModel.ObservableCollection<SLTest.Orders.Product>)(base.EndInvoke("ListProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginVerifyProducts(System.Collections.ObjectModel.ObservableCollection<long> ids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ids;
                System.IAsyncResult _result = base.BeginInvoke("VerifyProducts", _args, callback, asyncState);
                return _result;
            }
            
            public string EndVerifyProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("VerifyProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNew(SLTest.Orders.Product p, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = p;
                System.IAsyncResult _result = base.BeginInvoke("GetNew", _args, callback, asyncState);
                return _result;
            }
            
            public SLTest.Orders.DataObject EndGetNew(System.IAsyncResult result) {
                object[] _args = new object[0];
                SLTest.Orders.DataObject _result = ((SLTest.Orders.DataObject)(base.EndInvoke("GetNew", _args, result)));
                return _result;
            }
        }
    }
}
